// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using app_horarios_BackEnd.Data;

#nullable disable

namespace app_horarios_BackEnd.Migrations
{
    [DbContext(typeof(HorarioDbContext))]
    [Migration("20250622175632_Update")]
    partial class Update
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("App_horarios_BackEnd.Models.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<bool>("TemNEE")
                        .HasColumnType("boolean");

                    b.Property<int>("TurmaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TurmaId");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.BlocoAula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DiaSemana")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("integer");

                    b.Property<int>("Duracao")
                        .HasColumnType("integer");

                    b.Property<int>("HorarioId")
                        .HasColumnType("integer");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("integer");

                    b.Property<int>("SalaId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoAulaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("HorarioId");

                    b.HasIndex("ProfessorId");

                    b.HasIndex("SalaId");

                    b.HasIndex("TipoAulaId");

                    b.ToTable("BlocosAulas");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.CategoriaDocente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CategoriasDocentes");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.ComissaoCurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CursoId")
                        .HasColumnType("integer");

                    b.Property<int>("EscolaId")
                        .HasColumnType("integer");

                    b.Property<int>("IdUtilizador")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("EscolaId");

                    b.ToTable("ComissoesCurso");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EscolaId")
                        .HasColumnType("integer");

                    b.Property<int>("GrauId")
                        .HasColumnType("integer");

                    b.Property<int?>("LocalizacaoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EscolaId");

                    b.HasIndex("GrauId");

                    b.HasIndex("LocalizacaoId");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.DiretorCurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CursoId")
                        .HasColumnType("integer");

                    b.Property<int>("EscolaId")
                        .HasColumnType("integer");

                    b.Property<int>("IdUtilizador")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("EscolaId");

                    b.ToTable("DiretoresCurso");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("Ano")
                        .HasColumnType("integer");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("integer");

                    b.Property<int?>("HorasCampo")
                        .HasColumnType("integer");

                    b.Property<int?>("HorasEstagio")
                        .HasColumnType("integer");

                    b.Property<int?>("HorasLaboratorio")
                        .HasColumnType("integer");

                    b.Property<int?>("HorasOrientacao")
                        .HasColumnType("integer");

                    b.Property<int?>("HorasOutras")
                        .HasColumnType("integer");

                    b.Property<int?>("HorasPratica")
                        .HasColumnType("integer");

                    b.Property<int?>("HorasSeminario")
                        .HasColumnType("integer");

                    b.Property<int?>("HorasTeorica")
                        .HasColumnType("integer");

                    b.Property<int?>("HorasTp")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Plano")
                        .HasColumnType("text");

                    b.Property<int?>("PlanoId")
                        .HasColumnType("integer");

                    b.Property<string>("Ramo")
                        .HasColumnType("text");

                    b.Property<int?>("RamoId")
                        .HasColumnType("integer");

                    b.Property<string>("Semestre")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Disciplinas");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.DisciplinaCursoProfessor", b =>
                {
                    b.Property<int>("CursoId")
                        .HasColumnType("integer");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("integer");

                    b.Property<int?>("CursoId1")
                        .HasColumnType("integer");

                    b.Property<int>("EscolaId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int?>("ProfessorId")
                        .HasColumnType("integer");

                    b.HasKey("CursoId", "DisciplinaId");

                    b.HasIndex("CursoId1");

                    b.HasIndex("DisciplinaId");

                    b.HasIndex("EscolaId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("DisciplinaCursoProfessor");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Escola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Abreviacao")
                        .HasColumnType("text");

                    b.Property<int>("LocalizacaoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LocalizacaoId");

                    b.ToTable("Escolas");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Grau", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Duracao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Graus");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Horario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("TurmaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TurmaId");

                    b.ToTable("Horarios");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Localizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Abreviacao")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Localizacoes");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UnidadeDepartamentalId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("UnidadeDepartamentalId");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacidade")
                        .HasColumnType("integer");

                    b.Property<int>("EscolaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("TipoAulaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EscolaId");

                    b.HasIndex("TipoAulaId");

                    b.ToTable("Salas");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Secretariado", b =>
                {
                    b.Property<int>("IdUtilizador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdUtilizador"));

                    b.Property<int>("CursoId")
                        .HasColumnType("integer");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("EscolaId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdUtilizador");

                    b.HasIndex("CursoId");

                    b.HasIndex("EscolaId");

                    b.ToTable("Secretariados");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.TipoAula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Acronimo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("TiposAula");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.TransferenciaTurma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AlunoId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("DataTransferencia")
                        .HasColumnType("date");

                    b.Property<string>("Motivo")
                        .HasColumnType("text");

                    b.Property<int>("TurmaDestinoId")
                        .HasColumnType("integer");

                    b.Property<int>("TurmaOrigemId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.ToTable("TransferenciasTurma");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aberta")
                        .HasColumnType("boolean");

                    b.Property<int>("CursoId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.Property<int?>("NumeroAlunos")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Turmas");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.UnidadeDepartamental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UnidadesDepartamentais");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Utilizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipo")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Utilizadores");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Aluno", b =>
                {
                    b.HasOne("App_horarios_BackEnd.Models.Turma", "Turma")
                        .WithMany("Alunos")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.BlocoAula", b =>
                {
                    b.HasOne("App_horarios_BackEnd.Models.Disciplina", "Disciplina")
                        .WithMany()
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_horarios_BackEnd.Models.Horario", "Horario")
                        .WithMany("BlocosAulas")
                        .HasForeignKey("HorarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_horarios_BackEnd.Models.Professor", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_horarios_BackEnd.Models.Sala", "Sala")
                        .WithMany()
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_horarios_BackEnd.Models.TipoAula", "TipoAula")
                        .WithMany()
                        .HasForeignKey("TipoAulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Disciplina");

                    b.Navigation("Horario");

                    b.Navigation("Professor");

                    b.Navigation("Sala");

                    b.Navigation("TipoAula");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.ComissaoCurso", b =>
                {
                    b.HasOne("App_horarios_BackEnd.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_horarios_BackEnd.Models.Escola", "Escola")
                        .WithMany()
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Curso", b =>
                {
                    b.HasOne("App_horarios_BackEnd.Models.Escola", "Escola")
                        .WithMany("Cursos")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_horarios_BackEnd.Models.Grau", "Grau")
                        .WithMany()
                        .HasForeignKey("GrauId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_horarios_BackEnd.Models.Localizacao", "Localizacao")
                        .WithMany()
                        .HasForeignKey("LocalizacaoId");

                    b.Navigation("Escola");

                    b.Navigation("Grau");

                    b.Navigation("Localizacao");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.DiretorCurso", b =>
                {
                    b.HasOne("App_horarios_BackEnd.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_horarios_BackEnd.Models.Escola", "Escola")
                        .WithMany()
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.DisciplinaCursoProfessor", b =>
                {
                    b.HasOne("App_horarios_BackEnd.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_horarios_BackEnd.Models.Curso", null)
                        .WithMany("DisciplinaCursoProfessor")
                        .HasForeignKey("CursoId1");

                    b.HasOne("App_horarios_BackEnd.Models.Disciplina", "Disciplina")
                        .WithMany("DisciplinaCursoProfessores")
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_horarios_BackEnd.Models.Disciplina", "Escola")
                        .WithMany()
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_horarios_BackEnd.Models.Professor", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorId");

                    b.Navigation("Curso");

                    b.Navigation("Disciplina");

                    b.Navigation("Escola");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Escola", b =>
                {
                    b.HasOne("App_horarios_BackEnd.Models.Localizacao", "Localizacao")
                        .WithMany("Escolas")
                        .HasForeignKey("LocalizacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Localizacao");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Horario", b =>
                {
                    b.HasOne("App_horarios_BackEnd.Models.Turma", "Turma")
                        .WithMany()
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Turma");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Professor", b =>
                {
                    b.HasOne("App_horarios_BackEnd.Models.CategoriaDocente", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_horarios_BackEnd.Models.UnidadeDepartamental", "UnidadeDepartamental")
                        .WithMany()
                        .HasForeignKey("UnidadeDepartamentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("UnidadeDepartamental");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Sala", b =>
                {
                    b.HasOne("App_horarios_BackEnd.Models.Escola", "Escola")
                        .WithMany("Salas")
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_horarios_BackEnd.Models.TipoAula", "TipoAula")
                        .WithMany()
                        .HasForeignKey("TipoAulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escola");

                    b.Navigation("TipoAula");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Secretariado", b =>
                {
                    b.HasOne("App_horarios_BackEnd.Models.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App_horarios_BackEnd.Models.Escola", "Escola")
                        .WithMany()
                        .HasForeignKey("EscolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");

                    b.Navigation("Escola");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.TransferenciaTurma", b =>
                {
                    b.HasOne("App_horarios_BackEnd.Models.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Turma", b =>
                {
                    b.HasOne("App_horarios_BackEnd.Models.Curso", "Curso")
                        .WithMany("Turmas")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Curso");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Curso", b =>
                {
                    b.Navigation("DisciplinaCursoProfessor");

                    b.Navigation("Turmas");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Disciplina", b =>
                {
                    b.Navigation("DisciplinaCursoProfessores");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Escola", b =>
                {
                    b.Navigation("Cursos");

                    b.Navigation("Salas");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Horario", b =>
                {
                    b.Navigation("BlocosAulas");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Localizacao", b =>
                {
                    b.Navigation("Escolas");
                });

            modelBuilder.Entity("App_horarios_BackEnd.Models.Turma", b =>
                {
                    b.Navigation("Alunos");
                });
#pragma warning restore 612, 618
        }
    }
}
